{"version":3,"sources":["logo.svg","home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","routeCart","props","history","push","pathname","state","cart","total","discTot","disPrice","ascSort","sortArray","data","sort","a","b","Number","price","actual","setState","descSort","sortData","product","addItem","this","find","item","id","quantity","display","console","log","axios","get","then","res","catch","err","class","href","icon","faStar","color","className","faSearch","size","faShoppingCart","cursor","onClick","map","key","src","image","name","discount","addToCart","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.958659b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nimport React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faShoppingCart, faSearch, faStar } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios'\n\nexport default class Home extends Component {\n    constructor() {\n        super()\n        this.state = {\n            data: [],\n            sortData:[],\n            cart:[],\n            total : 0,\n            discTot : 0,\n            disPrice : 0\n        }\n    }\n\n\n    addToCart(product){\n        let addItem = this.state.data.find((item)=>item.id===product)\n        let existItem = this.state.cart.find((item)=>item.id===product)\n\n        if(existItem){\n            addItem.quantity += 1\n            addItem.disPrice += addItem.price.actual + addItem.price.display\n            this.setState({\n                total : this.state.total + addItem.price.actual,\n                discTot : this.state.discTot + addItem.price.display,\n                disPrice : addItem.disPrice\n            },console.log(this.state.disPrice,\"homeexist\"))\n                \n            \n        }\n        else{\n            addItem.quantity = 1\n            addItem.disPrice = addItem.price.actual + addItem.price.display\n            this.setState({\n                cart:[...this.state.cart,addItem],\n                total : this.state.total + addItem.price.actual,\n                discTot : this.state.discTot + addItem.price.display,\n                disPrice :  addItem.disPrice\n            },()=>console.log(this.state.disPrice,\"homenew\"))\n        }\n    }\n\n\n    routeCart=()=>{\n        this.props.history.push({\n            pathname: \"/cart\",\n            state:{\n                cart : this.state.cart,\n                total : this.state.total,\n                discTot : this.state.discTot,\n                disPrice : this.state.disPrice\n            }\n        })\n    }\n\n\n    componentDidMount() {\n        axios.get('https://my-json-server.typicode.com/prograk/demo/items')\n            .then(res => { this.setState({ data: res.data }) })\n            .catch(err => { console.log(err) })\n    }\n\n    ascSort=()=>{\n        const {data} = this.state\n        let sortArray = data.sort((a,b)=>Number(a.price.actual) - Number(b.price.actual))\n        this.setState({\n            data : sortArray\n        })\n    }\n    descSort=()=>{\n        const {data} = this.state\n        let sortArray = data.sort((a,b)=>Number(b.price.actual) - Number(a.price.actual))\n        this.setState({\n            data : sortArray\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <nav class=\"navbar navbar-dark\">\n                    <a class=\"navbar-brand\" href=\"#\">\n                        <FontAwesomeIcon icon={faStar} color=\"gold\" />\n                    </a>\n                    <div className=\"icons\">\n                        <FontAwesomeIcon icon={faSearch} color=\"white\" size=\"2x\" />\n                        <FontAwesomeIcon icon={faShoppingCart} color=\"white\" size=\"2x\" cursor='pointer' onClick={this.routeCart} />\n                    </div>\n                </nav>\n                \n                <div className=\"content-wrapper\">\n                    <div className=\"conatiner\">\n                        <div className=\"row\">\n                            <div className=\"col-4 col-md-2\">\n                                <aside id=\"page_sidebar\">\n                                    <section class=\"menu-section\">\n                                        <div className=\"ml-2 mt-2 d-flex justify-content-start\"><span>Filters</span></div>\n                                        <ul className=\"ml-2 pl-0 d-flex justify-content-between mt-3\">\n                                            <li><span className=\"bubble m-2\"></span></li>\n                                            <li><span className=\"bubble m-2\"></span></li>\n                                        </ul>\n                                        <p>price</p>\n                                        <button className=\"btn btn-primary\">Apply</button>\n                                    </section>\n                                </aside>\n                            </div>\n                            <div className=\"col-8 col-md-10 px-0\">\n                                <ul className='item-filters'>\n                                    <li><a href=\"#\">Sort By</a></li>\n                                    <li><a href=\"#\" onClick={this.descSort}>Price --High Low</a></li>\n                                    <li><a href=\"#\" onClick={this.ascSort}>Price --Low High</a></li>\n                                    <li><a href=\"#\">Discount</a></li>\n                                </ul>\n                                <div className=\"items-list\">\n                                    {this.state.data.map(data => <div key={data.id} className=\"item\">\n                                        <img src={data.image}></img>\n                                        <p>{data.name}</p>\n                                        <div className=\"d-flex justify-content-between\">\n                                            <p>{data.price.actual}<span><strike>{data.price.display}</strike></span></p>\n                                            <p>{data.discount}% off</p>\n                                        </div>\n                                        <button className=\"btn\" onClick={()=>this.addToCart(data.id)}>Add to Cart</button>\n                                    </div>\n                                    )}\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}